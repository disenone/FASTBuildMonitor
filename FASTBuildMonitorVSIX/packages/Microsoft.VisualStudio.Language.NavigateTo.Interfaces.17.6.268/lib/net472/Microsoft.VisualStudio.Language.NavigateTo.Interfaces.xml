<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Language.NavigateTo.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition">
            <summary>
            Defines a UI button for a for the Navigate To UI.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition.#ctor(Microsoft.VisualStudio.Imaging.Interop.ImageMoniker,System.String,System.Windows.Input.KeyGesture)">
            <summary>
            Creates a new <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition" />.
            </summary>
            <param name="imageMoniker">The icon for the button.</param>
            <param name="description">The button's description (tooltip/automation).</param>
            <param name="accessKey">The button's hot key.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition.ImageMoniker">
            <summary>
            The icon shown on the UI button.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition.Description">
            <summary>
            The tooltip shown when the mouse hovers over the UI button and also
            the string to represent the UI button in automation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.ButtonDefinition.AccessKey">
            <summary>
            The hot key used to toggle the filter UI button.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionItem">
            <summary>
            Represents a single description item category / details pair.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionItem.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun},System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun})">
            <summary>
            Creates a new DescriptionItem.
            </summary>
            <param name="category">The category of the item.</param>
            <param name="details">The item's details.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionItem.Category">
            <summary>
            The item's category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionItem.Details">
            <summary>
            The item's details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun">
            <summary>
            Represents a single description text run.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.#ctor(System.String,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new DescriptionRun.
            </summary>
            <param name="text">The run's text.</param>
            <param name="color">The run's color.</param>
            <param name="bold">If the run is to be bolded.</param>
            <param name="italic">If the run is to be italicized.</param>
            <param name="underline">If the run is to be underlined.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.#ctor(System.String)">
            <summary>
            Creates a new DescriptionRun.
            </summary>
            <param name="text">The run's text.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Creates a new DescriptionRun.
            </summary>
            <param name="text">The run's text.</param>
            <param name="color">The run's color.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new DescriptionRun.
            </summary>
            <param name="text">The run's text.</param>
            <param name="bold">If the run is to be bolded.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.Text">
            <summary>
            The run's text.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.Color">
            <summary>
            The run's color.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.Bold">
            <summary>
            If the run is bolded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.Italic">
            <summary>
            If the run is italicized.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.DescriptionRun.Underline">
            <summary>
            If the run is underlined.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterAttribute">
            <summary>
            Identifies a filter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterAttribute.#ctor(System.String)">
            <summary>
            Constructs a new instance of the attribute.
            </summary>
            <param fileExtension="filterName">The filter's name.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filterName" /> is null or empty.</exception>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterAttribute.FilterName">
            <summary>
            Gets the filter name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterDefinition">
            <summary>
            Base class for a UI button and filter parameter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterDefinition.Button">
            <summary>
            Optional UI button for the filter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.KindFilterDefinition">
            <summary>
            Defines a UI button and filter for a <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" />.
            </summary>
            <remarks>
            <para>This is a MEF component part, and should be exported as:
            [Export(typeof(FilterDefinition))]</para>
            <para>
            Exporters must provide the NameAttribute. The OrderAttribute FilterShortcutAttribute may be
            provided optionally.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.KindFilterDefinition.Kind">
            <summary>
            If this filter is active, the search will add a <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" /> if the
            <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" /> matches this one.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutAttribute">
            <summary>
            Declares an association between a <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition" /> and a
            particutlar <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterDefinition" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutAttribute" />.
            </summary>
            <param name="filterShortcutName">The filter shortcut name.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filterShortcutName" />is null or an empty string.</exception>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutAttribute.FilterShortcutNames">
            <summary>
            The filter shortcut name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition">
            <summary>
            Defines a custom filter shortcut which will toggle the associated filters.
            </summary>
            <remarks>
            <para>This is a MEF component part, and should be exported as:
            [Export(typeof(FilterShortcutDefinition))]</para>
            <para>
            Exporters must provide the NameAttribute. The OrderAttribute may be provided optionally.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.ActivationSequence">
            <summary>
            The character sequence for the search box used to invoke the filter shortcut.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.Description">
            <summary>
            The description presented in the filter shortcut help result list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.IsExclusive">
            <summary>
            This filter shortcut will not invoke a search on any <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider" />
            except those that say they can possibly return values allowed by the filters
            associated with this filter shortcut.  Also, only filters associated with this shortcut
            will appear in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.IsDelimiterRequired">
            <summary>
            Is a delimiter between the activation sequence string and the search string required?
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.ShouldSearchImmediately">
            <summary>
            A search is requested from provider immediately when the filter shortcut is activated
            even when no search parameter is provided.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.DefaultOptions">
            <summary>
            Default values for NavigateToOptions for this filter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.Button">
            <summary>
            UI button for the filter shortcut.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterToShortcutDefinition">
            <summary>
            Specifies a mapping between a fitler and filter shortcuts.
            </summary>
            <remarks> 
            Because you cannot subclass this type, you can use the [Export] attribute with no type.
            </remarks>
            <example>
            <code>
            internal sealed class Components
            {
               [Export]
               [Filter("File")]
               [FilterShortcut("All Files")]
               [FilterShortcut("Project Files")]
               internal FilterToShortcutDefinition abcFilterToShortcutDefinition;
               
               { other components }
            }
            </code>
            </example>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback">
            <summary>
            Collects results and status updates from providers.
            It is valid to call these methods in any order.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback.AddItem(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem)">
            <summary>
            Reports a matching <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" />.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback.Done">
            <summary>
            Signals that a provider has finished its search.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback.Invalidate">
            <summary>
            Signals that a provider's results for the most recent search are invalid.
            
            The aggregator will discard all symbols from this provider, and,
            if needed, call StartSearch again to obtain new symbols.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback.ReportProgress(System.Int32,System.Int32)">
            <summary>
            Inform the callback of how far along the provider is in the search.
            </summary>
            <param name="current">An integer between 0 and maximum, inclusive.</param>
            <param name="maximum">An integer greater than 0.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback.Options">
            <summary>
            Retrieve the options interface from the callback.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback2">
            <summary>
            Collects results and status updates from providers.
            It is valid to call these methods in any order.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback2.Done(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason)">
            <summary>
            Signals that a provider has finished its search but couldn't get
            complete results because of a standard reason.
            </summary>
            <param name="reason">The reason why the results where incomplete.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback2.Done(System.String)">
            <summary>
            Signals that a provider has finished its search but couldn't get
            complete results because of a custom reason.
            </summary>
            <param name="incompleteReason">The reason why the results where incomplete.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToFilterParameters">
            <summary>
            Defines Navigate To search filtering parameters.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToFilterParameters.Kinds">
            <summary>
            The search will only add a <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" /> if the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" />
            is contained within this collection or if the collection is empty.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay">
            <summary>
            Holds UI-suitable display information for a symbol.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Glyph">
            <summary>
            The symbol glyph. This should be closely associated with the kind
            <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Kind" /> to indicate to the user if the
            item is a class, file, method, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Name">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.AdditionalInformation">
            <summary>
            Any additional information that should be displayed for the item.
            A primary use of this string is to help users differentiate between
            items with identical names. For example, for types and members this 
            could be the fully qualified name of the symbol.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Description">
            <summary>
            Detailed information to be displayed about the item.  Commonly this
            will include the kind, scope, location and a preview of the item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.DescriptionItems">
            <summary>
            If this property is provided, a richly formatted display of the
            description can be achieved than with the plain text
            <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Description" /> property.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.NavigateTo">
            <summary>
            Navigates to the file, line, and column associated with this symbol.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay2">
            <summary>
            Adds an optional preview behavior for INavigateToItemDisplay implementations.  Implementing
            INavigateToItemDisplay2 marks the display item as one that supports previewing.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay2.GetProvisionalViewingStatus">
            <summary>
            Determines the provisional viewing status of the item.
            </summary>
            <returns>A value from the __VSPROVISIONALVIEWINGSTATUS enumeration indicating whether or not the item can be previewed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay2.PreviewItem">
            <summary>
            Opens the item in preview mode, without focusing the item.  The caller is responsible for setting up
            a default preview state using NewDocumentStateScope, and the implementation of PreviewItem should
            only be concerned with opening the correct document.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay3">
            <summary>
            Adds an ability to provide an item's icon as an <see cref="T:Microsoft.VisualStudio.Imaging.Interop.ImageMoniker" /> and allows
            the provider to describe the matching characters of an item for complex matching
            scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay3.GlyphMoniker">
            <summary>
            Gets the item's icon moniker. This should be closely associated with the
            <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Kind" /> to indicate to the user if the
            item is a class, file, method, etc.
            </summary>
            <remarks>This property obsoletes <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Glyph" /> and
            will be used first, but for backward compatibility if this property returns 
            <see cref="F:Microsoft.VisualStudio.Imaging.ImageLibrary.InvalidImageMoniker" />, <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Glyph" /> 
            will be used.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay3.GetNameMatchRuns(System.String)">
            <summary>
            Gets a list of spans (character positions) of matching (against the search query)
            character start/stop indexes in the <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.Name" /> property.
            Return null for the default behavior where the caller tries to figure out the matching characters.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay3.GetAdditionalInformationMatchRuns(System.String)">
            <summary>
            Gets a list of spans (character positions) of matching (against the search query)
            character start/stop indexes in the <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplay.AdditionalInformation" /> property.
            Return null for the default behavior where the caller tries to figure out the matching characters.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplayFactory">
            <summary>
            Creates UI-suitable display information for a symbol.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplayFactory.CreateItemDisplay(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem)">
            <summary>
            Creates UI-suitable display information for a symbol.
            </summary>
            <param name="item"></param>
            <returns>Display information, or null if the information cannot be created from the item.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider">
            <summary>
            Finds symbols that match a search string, and passes them back to a callback.
            An instance of this type may be asked to do multiple searches during
            its lifetime. When it will no longer be used, it will be disposed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider.StartSearch(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback,System.String)">
            <summary>
            Indicates that the provider should begin a new search.
            If the provider is in the middle of a search, it should be
            terminated as soon as possible as the results of that search will
            now be ignored.
            Implementations of this method should move all work to a separate
            thread and allow this call to return as soon as possible.
            </summary>
            <param name="callback">A callback specific to this search.</param>
            <param name="searchValue"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider.StopSearch">
            <summary>
            Indicates that the provider should stop any current search.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider2">
            <summary>
            Extends INavigateToItemProvider with filtering functionality.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider2.KindsProvided">
            <summary>
            Lists the kinds this provider will possibly return.  This will be used
            to optimize the filtering by avoiding even calling the provider to
            search if it knows that nothing will be returned.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider2.CanFilter">
            <summary>
            The provider has the ability to filter itself and will only return
            items matching the filtering parameters.  The provider will be called
            with the <see cref="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider2.StartSearch(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback,System.String,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToFilterParameters)" /> overload with the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToFilterParameters" />
            parameter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider2.StartSearch(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToCallback,System.String,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToFilterParameters)">
            <summary>
            Indicates that the provider should begin a new search.
            If the provider is in the middle of a search, it should be
            terminated as soon as possible as the results of that search will
            now be ignored.
            Implementations of this method should move all work to a separate
            thread and allow this call to return as soon as possible.
            </summary>
            <param name="callback">A callback specific to this search.</param>
            <param name="searchValue">The search query string.</param>
            <param name="filter">
            A filter specific to this search. The callback should not receive items
            blocked by the filter.
            </param>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory">
            <summary>
            Responsible for creating new instances of <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider" />.
            </summary>
            <example>
            <code>
            [Export]
            [OnlyNavigateToSupport]
            internal sealed class Factory : INavigateToItemProviderFactory
            {
            }
            </code>
            </example>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory.TryCreateNavigateToItemProvider(System.IServiceProvider,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider@)">
            <summary>
            Creates a new provider, if possible.
            The IServiceProvider that is passed in may be used to find
            necessary services to back the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProvider" />. For
            example, it could be used to check if a particular package has
            been loaded by VisualStudio.
            </summary>
            <param name="serviceProvider"></param>
            <param name="provider"></param>
            <returns>True if the provider was successfully created, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToOptions.HideExternalItems">
            <summary>
            Signals that items not part of the solution should be filtered out.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToOptions2.SearchCurrentDocument">
            <summary>
            Signals that items should be limitted to only the current document.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason">
            <summary>
            Standard reasons for incomplete results.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason.Unknown">
            <summary>
            The provider didn't provide a reason.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason.SolutionLoading">
            <summary>
            The results may be incomplete because the solution is still loading.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason.Parsing">
            <summary>
            The results may be incomplete because the language service is still
            parsing files.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IncompleteReason.TooManyResults">
            <summary>
            The results are incomplete because there would have been too many
            results shown.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IResultExpander">
            <summary>
            Provides a callback for objects that can improve search results.
            </summary>
            <remarks>
            <para>
            This interface might be used by a provider who delays loading files for performance reasons.
            Their search results could be intentionally impaired, and this gives the user a gesture to
            override the lazy default behavior and force loads to get accurate results.
            </para>
            <para>
            This is a MEF component part, and should be exported as:
            <c>[Export(typeof(IResultExpander))]</c>
            </para>
            <para>
            Exporters must provide the attribute <see cref="T:Microsoft.VisualStudio.Utilities.NameAttribute" />. Exporters may also
            specify <see cref="T:Microsoft.VisualStudio.Utilities.OrderAttribute" /> optionally.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IResultExpander.CanExecute">
            <summary>
            Gets whether this expander can execute.
            </summary>
            <remarks>This property is used to determine whether to show a UI affordance.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.IResultExpander.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            This task is executed when the user explicitly requests expanded results.
            </summary>
            <remarks>The GoTo search in progress will be relaunched upon completion.</remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind">
            <summary>
            Indicates how a symbol matched a search string.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Exact">
            <summary>
            The symbol name and search string match exactly.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Prefix">
            <summary>
            The symbol name starts with the search string.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Substring">
            <summary>
            The entire search string is found in the symbol name, but not at
            the beginning.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Regular">
            <summary>
            The symbol matches in some way, but is not an exact or prefix match.
            For example, if all of the search terms appear in the name, or there
            is a camel-case match.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.None">
            <summary>
            The symbol name does not match the search string at all.
            This member is provided for completeness; symbols that
            do not match the search string should not be reported to
            the callback at all.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKindExtensions.AsPatternMatchKind(Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind)">
            <summary>
            Converts <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind" /> to <see cref="T:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind" />.
            </summary>
            <param name="source">Source <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind" /> to convert.</param>
            <returns>
            A subset of the <see cref="T:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind" /> enumeration that map to the possible values of <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind" />.
            </returns>
            <remarks>
            Mapping:
            <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Exact" /> maps to <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Exact" />.
            <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Prefix" /> maps to <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Prefix" />.
            <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Substring" /> maps to <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Substring" />.
            <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Regular" /> maps to <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Fuzzy" />.
            <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.None" /> maps to <see langword="null" />.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKindExtensions.AsMatchKind(Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind)">
             <summary>
             Converts <see cref="T:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind" /> to <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind" />.
             </summary>
             <param name="other">The <see cref="T:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind" /> to convert.</param>
             <returns>
             A member of the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind" /> enumeration.
             </returns>
             <remarks>
             Mapping:
             <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Exact" /> maps to <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Exact" />.
             <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Prefix" /> maps to <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Prefix" />.
             <see cref="F:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind.Substring" /> maps to <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Substring" />.
             All other types map to <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.Regular" />.
            
             Note: No types return <see cref="F:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind.None" /> as there is no analagy in <see cref="T:Microsoft.VisualStudio.Text.PatternMatching.PatternMatchKind" />.
             </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem">
            <summary>
            Represents a single symbol, and holds all the information necessary to order symbols.
            Symbols are sorted first on the match kind (exact, prefix, or regular), then name,
            kind (file, class, method, etc.), and finally on a secondary string to break any ties.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.#ctor(System.String,System.String,System.String,System.String,System.Object,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplayFactory)">
            <summary>
            Creates a new case-insensitive <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" />.
            </summary>
            <param name="name">The name of the symbol.</param>
            <param name="kind">The symbol's kind. This should be one of the constants in <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" />.</param>
            <param name="language">The name of the language this symbol comes from.</param>
            <param name="secondarySort">An arbitrary string for breaking ties in sorting.</param>
            <param name="tag">Any data the implementor may need to identify the symbol later.</param>
            <param name="matchKind">Exact, prefix, aubstring, or regular.</param>
            <param name="displayFactory">Used to generate the display information for this symbol on an as-needed basis.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.#ctor(System.String,System.String,System.String,System.String,System.Object,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.MatchKind,System.Boolean,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplayFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" />.
            </summary>
            <param name="name">The name of the symbol.</param>
            <param name="kind">The symbol's kind. This should be one of the constants in <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" />.</param>
            <param name="language">The name of the language this symbol comes from.</param>
            <param name="secondarySort">An arbitrary string for breaking ties in sorting.</param>
            <param name="tag">Any data the implementor may need to identify the symbol later.</param>
            <param name="matchKind">Exact, prefix, aubstring, or regular.</param>
            <param name="isCaseSensitive">If this item's match was case sensitive.</param>
            <param name="displayFactory">Used to generate the display information for this symbol on an as-needed basis.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.#ctor(System.String,System.String,System.String,System.String,System.Object,Microsoft.VisualStudio.Text.PatternMatching.PatternMatch,Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemDisplayFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem" />.
            </summary>
            <param name="name">The name of the symbol.</param>
            <param name="kind">The symbol's kind. This should be one of the constants in <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind" />.</param>
            <param name="language">The name of the language this symbol comes from.</param>
            <param name="secondarySort">An arbitrary string for breaking ties in sorting.</param>
            <param name="tag">Any data the implementor may need to identify the symbol later.</param>
            <param name="match">An object describing how well the item relates to the search query.</param>
            <param name="displayFactory">Used to generate the display information for this symbol on an as-needed basis.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Name">
            <summary>
            The symbol's name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Kind">
            <summary>
            The symbol's kind.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Language">
            <summary>
            The language from which the symbol comes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.SecondarySort">
            <summary>
            An arbitrary string to allow for tie-breaking during sorting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.Tag">
            <summary>
            Implementor-specific data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.DisplayFactory">
            <summary>
            Used to generate display information for this symbol on an as-needed basis.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.MatchKind">
            <summary>
            How this symbol matches the search string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.IsCaseSensitive">
            <summary>
            If this item's match was case-sensitive.  Case-sensitive matches of the same <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.MatchKind" />
            will be presented before insensitive matches.  i.e. a case-sensitive exact match will
            come before a case-insensitive exact match.  However, a case-sensitive prefix match will
            still come after a case-insensitive exact match.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItem.PatternMatch">
            <summary>
            How this symbol matches the search string.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToItemKind">
            <summary>
            Contains constants representing the different symbol kinds recognized by the sorting algorithm.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToOptions">
            <summary>
            Implementation of <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToOptions2" />.
            </summary>
            <remarks>
            This type provides a base implementation of <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToOptions" />
            that can be used to initialize <see cref="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.FilterShortcutDefinition.DefaultOptions" />
            to set the default options for a particular filter.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToOptions.HideExternalItems">
            <summary>
            Signals that items not part of the solution should be filtered out.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.NavigateToOptions.SearchCurrentDocument">
            <summary>
            Signals that items should be limitted to only the current document.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.OnlyNavigateToSupportAttribute">
            <summary>
            Marks an <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory" /> as only usable in a Go To context.
            </summary>
            <remarks>
            By default, Navigate To provider are also invoked by some other search features like Visual Studio Search
            and All In One Search. This attribute indicates other search features not to invoke this provider,
            which therefore keep this provider exclusively for Navigate To and nothing else.
            A good reason for using the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.OnlyNavigateToSupportAttribute" /> is when you want to create
            a separated dedicated provider for another search feature.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.OnlyNavigateToSupportAttribute.OnlyNavigateToSupport">
            <summary>
            Indicates that the <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory" /> can only be used when searching
            through Go To.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.PackageAttribute">
            <summary>
            Added to an <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory" /> implementation to specify the package it depends on.
            The <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.INavigateToItemProviderFactory" /> will only be loaded if the specified package is loaded.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.PackageAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.PackageAttribute" />.
            </summary>
            <param name="guid">The unique identifier of the dependency package.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Language.NavigateTo.Interfaces.PackageAttribute.Guid">
            <summary>
            The unique identifier of the dependency package.
            </summary>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" /><DigestValue>PzQXcuREctpqhuftLzkoohekk0b98FBVZ6sguAKW0g4=</DigestValue></Reference></SignedInfo><SignatureValue>Nc4XuhEdIs9J6tgAGYkBf4oBB6xt2qxwJmaScVCXgy15+bLQ1D9rQvR8R36KbkS1TxdVUCJzvAHRGXwSpuYqRLcLpjLtUSXzQBEopAsYLLg71GyrGML0QveuQXhRsjAstg41MqPoJIDYkU6mJL0bKCuqUIGum36YS6zh+04482NftjcIHJH2JLZN3JChhKaoQf6E9DESsM9czK3P/osXlTqVCUIjFL8crDpqLDq4QMvZ38jQynATHLjbN3aH8MmnXwVj0XLahttANt+2ZQbIK0IivSJP05couIzQhM5xDIxX9Usvmam+kLczh/BW/oDYhBYEwV2tOgMN5F7ARGCbWA==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>1Cj3ChlWunG6BkFNNzjW1CspeFqR+kNl6PXD90YV0zmugukx5bXdkX545VEBvjMKMvd4hphihDBf48jtl3YsDD+Nu4/dAvzzGP3eb2N9bMfrnbW4n+xgie4ydby83Y9vM1eK9BRhushL/rVDXpUyLBZpkm9BVIibVOK+bHwk4b4PHSPxfR4esTGaFbYvpG1ZWvoZRvG3+LNNFU8OLgGYYxkxQmBUcrSid/5rXoNqp8LxwzoFe0EnVeXVnXdPsc3LhtKoHd6AggIx/GZo5qMJB1HuHVJm3GX17IFpTn3OgxuyUvg3iWpNQ72m2pmKh4NQFHmdPrJKZMKysF0xcAUZbQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">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</CounterSignature></Object></Signature></doc>
